name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # GHCR'a yazmak için gerekli

    # Servis olarak test veritabanını ayağa kaldır
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_PASSWORD: password # Basit ve test için yeterli
          POSTGRES_USER: user
          POSTGRES_DB: test_db
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U user -d test_db" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Generate Prisma Client
        run: npx prisma generate
        env:
          # Test ortamı için güvenli veritabanı bağlantısı
          DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}

      - name: Lint
        run: npm run lint --if-present

      - name: Run Tests
        run: npm test -- --ci
        env:
          # Testler için de aynı güvenli bağlantı bilgisini kullan
          DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }} # Testler için de secret kullan

      - name: Build
        run: npm run build

      - name: Export OpenAPI JSON
        run: npm run openapi:json
        env:
          # Bu adım için de dummy/secret değerler kullan
          DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SWAGGER_ENABLED: "true"

      - name: Upload OpenAPI artifact
        uses: actions/upload-artifact@v4
        with:
          name: openapi-json
          # openapi dizini yerine docs dizinine kaydediyoruz
          path: docs/openapi.json

      - name: Login to GHCR
        if: github.ref == 'refs/heads/main' # Sadece main branch'e push yapıldığında çalışsın
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        if: github.ref == 'refs/heads/main' # Sadece main branch'e push yapıldığında çalışsın
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/backend:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/backend:latest